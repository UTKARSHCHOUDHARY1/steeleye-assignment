Q1:-
Lists can be created in a similar way as we create lists in JavaScript.The list component contains list items.
List is used to store multiple items of the same and different datatype under a variable like array .
Here single list item is stored inside WrappedSingleListItem. 
React.memo(WrappedListComponent) returns a new memoized component List.
List render is memoized but the outputs of List is same content as the original WrappedListComponent component.
items array is used to store these list items and then each item is looped through using map() function and displayed.
 The background color of text changes according to the isSelected state, which is dependent on selectedIndex.
const [selectedIndex, setSelectedIndex] = useState(true);
const [selectedIndex, setSelectedIndex] = useState();

Q2:-
Using useState() the 'set' variable should be after the local variable
Insted of shapeOf we use arrayof
WrappedListComponent.propTypes = {
items: PropTypes.arrayOf(PropTypes.shape({
text: PropTypes.string.isRequired,
})),
};
Null Properties Problem:
Solution- This error states that the items array cannot be empty or Null.
WrappedListComponent.defaultProps = {
items: [{ text: "First Item" }, { text: "Second Item" }]
};

Q3:-
modified code:-
import PropTypes from "prop-types";
import React, { useState, useEffect, memo } from "react";
const WrappedSingleListItem = ({
index,
isSelected,
onClickHandler,
text
}) => {
return (
<li
style={{ backgroundColor: isSelected ? "green" : "red" }}
onClick={() => onClickHandler(Boolean(index))}
>
{text}

);
};
WrappedSingleListItem.propTypes = {
index: PropTypes.number,
isSelected: PropTypes.bool,
onClickHandler: PropTypes.func.isRequired,
text: PropTypes.string.isRequired
};
const SingleListItem = memo(WrappedSingleListItem);
const WrappedListComponent = ({ items }) => {
const [selectedIndex, setSelectedIndex] = useState();
useEffect(() => {
setSelectedIndex(true);
}, [items]);
const handleClick = (index) => {
setSelectedIndex(Boolean(index));
console.log("This is index: " + index);
};
return (
<ul style={{ textAlign: "left" }}>
{items.map((item, index) => (
<SingleListItem
onClickHandler={() => handleClick(index)}
text={item.text}
index={index}
isSelected={selectedIndex}
key={index}
/>
))}

);
};
WrappedListComponent.propTypes = {
items: PropTypes.arrayOf( PropTypes.shape({
text: PropTypes.string.isRequired
})
)
};
WrappedListComponent.defaultProps = {
items: [{ text: "First Item" }, { text: "Second Item" }]
};
const List = memo(WrappedListComponent);
export default List;